---
import { Image } from 'astro:assets';
import translations from '../i18n/portfolio.json';
import Squircle from './Squircle.astro';
import LinkedInIcon from './icons/LinkedInIcon.astro';
import { SquareArrowOutUpRight, Building2, UsersRound, BriefcaseBusiness } from 'lucide-react';
import { formatDateRange } from '../utils/dates';
import type { CollectionEntry } from 'astro:content';
import Tooltip from './Tooltip.astro';

type Props = CollectionEntry<'experiences'>['data'] & {
  content: string;
  render?: () => Promise<{ Content: any }>;
  lang?: string;
};

const {
  companyLogo,
  companyName,
  companyUrl,
  companyLinkedIn,
  companyType,
  teamSize,
  contractType,
  role,
  startDate,
  endDate,
  technologies = [],
  subExperiences = [],
  render,
  content,
  lang = 'en',
} = Astro.props;

const { formattedStartDate, formattedEndDate, durationStr } = formatDateRange(startDate, endDate, lang);  
const { Content } = await render?.() || { Content: () => content };

const t = translations[lang];
---

<div class="p-4 md:p-6 w-full bg-primary-50 dark:bg-primary-900 rounded-lg space-y-4">
  <div class="flex gap-4">
    <Squircle width={64} height={64} className="shrink-0">
      <Image 
        src={companyLogo} 
        alt={companyName} 
        width={64} 
        height={64}
        class="w-16 h-16"
        loading="lazy"
      />
    </Squircle>
    <div class="flex-grow">
      <div class="flex items-center">
        <div class="font-bold text-xl text-primary-900 dark:text-primary-100">
          <span class="mr-2">{companyName}</span>
          {companyType && (
            <Tooltip text={`${translations[lang].sections.experience.companyType}: ${companyType}`} position="top" className="align-sub">
              <span class="text-base text-secondary-700 dark:text-secondary-500 mr-2 inline-flex items-center gap-1 font-normal">
                <Building2 className="w-5 h-5" />
                {t.sections.experience.companyTypes[String(companyType).toLowerCase()]}
              </span>
            </Tooltip>
          )}
          {!subExperiences.length && teamSize && (
            <Tooltip text={`${translations[lang].sections.experience.teamSize.label}: ${teamSize} ${translations[lang].sections.experience.teamSize.unit}`} position="top" className="align-sub">
              <span class="text-base text-secondary-700 dark:text-secondary-500 mr-2 inline-flex items-center gap-1 font-normal">
                <UsersRound className="w-5 h-5" />
                {teamSize}
              </span>
            </Tooltip>
          )}
          {contractType && (
            <Tooltip text={`${translations[lang].sections.experience.contractType}: ${translations[lang].sections.experience.contractTypes[contractType]}`} position="top" className="align-sub">
              <span class="text-base text-secondary-700 dark:text-secondary-500 inline-flex items-center gap-1 font-normal">
                <BriefcaseBusiness className="w-5 h-5" />
                {t.sections.experience.contractTypes[contractType]}
              </span>
            </Tooltip>
          )}
        </div>
        <div class="inline-flex gap-2 ml-auto pl-3">
          {companyUrl && (
            <Tooltip text={t.sections.experience.visitWebsite.replace('{name}', companyName)} position="top-right">
              <a 
                href={companyUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                aria-label={t.sections.experience.visitWebsite.replace('{name}', companyName)}
            >
              <SquareArrowOutUpRight client:load className="w-6 h-6 text-primary-300 hover:text-primary dark:text-primary dark:hover:text-primary-300" />
              </a>
            </Tooltip>
          )}
          {companyLinkedIn && (
            <Tooltip text={t.sections.experience.visitLinkedIn.replace('{name}', companyName)} position="top-right">
              <a 
                href={companyLinkedIn} 
                target="_blank" 
                rel="noopener noreferrer"
                aria-label={t.sections.experience.visitLinkedIn.replace('{name}', companyName)}
              >
                <LinkedInIcon class="w-6 h-6 fill-primary-300 hover:fill-primary dark:fill-primary dark:hover:fill-primary-300" />
              </a>
            </Tooltip>
          )}
        </div>
      </div>
      <div class="text-lg font-semibold text-primary-700 dark:text-primary-300">{role}</div>
      <div class="text-sm text-secondary-600 dark:text-secondary-500">
        {formattedStartDate} - {formattedEndDate}{' '}
        <span class="text-primary-700 dark:text-primary-300 ml-1">({durationStr})</span>
      </div>
    </div>
  </div>

  <div class="text-primary-900 dark:text-primary-100 font-light experience-content">
    <div class="[&>ul]:list-disc [&>ul]:ml-4 [&>ul>li]:mb-2 [&>ul>li::marker]:text-secondary-600 [&>ul>li::marker]:dark:text-secondary-500">
      <Content />
    </div>
  </div>

  {technologies.length > 0 && (
    <div class="flex flex-wrap gap-2">
      {technologies.map((tech) => (
        <span class="px-3 py-1 text-sm bg-primary-100 dark:bg-primary-800 rounded-full">
          {tech}
        </span>
      ))}
    </div>
  )}

  {subExperiences.length > 0 && (
    <div class="mt-6 space-y-4 pl-4 md:pl-6 border-l-2 border-primary-200 dark:border-primary-700">
      {subExperiences.map((subExp) => (
        <div class="space-y-2">
          <div class="flex gap-4">
            {subExp.companyLogo && (
              <Squircle width={48} height={48} className="shrink-0 mt-1.5">
                <Image 
                  src={subExp.companyLogo} 
                  alt={subExp.companyName || ''} 
                  width={48} 
                  height={48}
                  class="w-12 h-12"
                  loading="lazy"
                />
              </Squircle>
            )}
            <div class="flex-grow">
              <div class="flex items-center">
                <div class="font-semibold text-lg text-primary-900 dark:text-primary-100">
                  {subExp.companyName}
                  {subExp.teamSize && (
                    <Tooltip text={`${t.sections.experience.teamSize.label}: ${subExp.teamSize} ${t.sections.experience.teamSize.unit}`} position="top" className="align-sub">
                      <span class="text-base text-secondary-700 dark:text-secondary-500 pl-2 inline-flex items-center gap-1 align-top font-normal">
                        <UsersRound className="w-5 h-5" />
                        {subExp.teamSize}
                      </span>
                    </Tooltip>
                  )}
                </div>
                <div class="inline-flex gap-2 ml-auto pl-3">
                  {subExp.companyUrl && (
                    <Tooltip text={t.sections.experience.visitWebsite.replace('{name}', subExp.companyName)} position="top-right" className="align-sub">
                      <a 
                        href={subExp.companyUrl} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        aria-label={t.sections.experience.visitWebsite.replace('{name}', subExp.companyName)}
                      >
                        <SquareArrowOutUpRight client:load className="w-6 h-6 text-primary-300 hover:text-primary dark:text-primary dark:hover:text-primary-300" />
                      </a>
                    </Tooltip>
                  )}
                  {subExp.companyLinkedIn && (
                    <Tooltip text={t.sections.experience.visitLinkedIn.replace('{name}', subExp.companyName)} position="top-right" className="align-sub">
                      <a 
                        href={subExp.companyLinkedIn} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        aria-label={t.sections.experience.visitLinkedIn.replace('{name}', subExp.companyName)}
                      >
                        <LinkedInIcon class="w-6 h-6 fill-primary-300 hover:fill-primary dark:fill-primary dark:hover:fill-primary-300" />
                      </a>
                    </Tooltip>
                  )}
                </div>
              </div>
              {subExp.companyName && (
                <div class="text-primary-700 dark:text-primary-300 font-semibold">{subExp.role}</div>
              )}
              {(() => {
                const { formattedStartDate, formattedEndDate, durationStr } = formatDateRange(
                  subExp.startDate,
                  subExp.endDate,
                  lang
                );
                return (
                  <div class="text-sm text-secondary-600 dark:text-secondary-500">
                    {formattedStartDate} - {formattedEndDate}{' '}
                    <span class="text-primary-700 dark:text-primary-300 ml-1">({durationStr})</span>
                  </div>
                );
              })()}
            </div>
          </div>
          <div class="text-primary-900 dark:text-primary-100 font-light">
            {subExp.description.split('\n').map((line: string, index: number, arr: string[]) => (
              <span class={index < arr.length - 1 ? 'block mb-2' : 'block'}>
                {line}
              </span>
            ))}
          </div>
          {subExp.technologies && subExp.technologies.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {subExp.technologies.map((tech) => (
                <span class="px-3 py-1 text-sm bg-primary-100 dark:bg-primary-800 rounded-full">
                  {tech}
                </span>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  )}
</div>