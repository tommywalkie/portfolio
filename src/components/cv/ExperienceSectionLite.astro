---
import { getCollection } from 'astro:content';
import ExperienceCardLite from './ExperienceCardLite.astro';
import { DateTime } from 'luxon';

const experiences = await getCollection('experiences');
const sortedExperiences = experiences.sort((a, b) => {
  const dateA = DateTime.fromFormat(a.data.startDate, 'yyyy-MM');
  const dateB = DateTime.fromFormat(b.data.startDate, 'yyyy-MM');
  return dateB.diff(dateA).toMillis();
});

const monthsOfExperience = experiences
    .filter(experience => 
        experience.data.contractType !== 'Work-study contract' && 
        experience.data.contractType !== 'Internship'
    )
    .map(experience => {
        const startDate = DateTime.fromFormat(experience.data.startDate, 'yyyy-MM');
        const endDate = DateTime.fromFormat(experience.data.endDate, 'yyyy-MM');
        const duration = endDate.diff(startDate, ['months']).as('months');
        return Math.round(duration);
    })
    .reduce((acc, curr) => acc + curr, 0);

const yearsOfExperience = Math.floor(monthsOfExperience / 12);
const remainingMonths = monthsOfExperience % 12;
---

<section id="experience" aria-labelledby="experience">
  <h4 class="mb-4 text-primary-900">Experience <span class="text-md text-primary-400 font-medium">({yearsOfExperience}{remainingMonths > 0 ? '+' : ''} years)</span></h4>
  <div class="space-y-7 w-full max-w-4xl mx-auto">
    {sortedExperiences.map((experience) => (
      <ExperienceCardLite 
        {...experience.data} 
        content={experience.body}
        render={experience.render}
        subExperiences={experience.data.subExperiences || []}
      />
    ))}
  </div>
</section> 