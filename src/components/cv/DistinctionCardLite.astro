---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Squircle from '../Squircle.astro';
import { Trophy } from 'lucide-react';
import { DateTime } from 'luxon';
import translations from '../../i18n/portfolio.json';
const distinctions = await getCollection('distinctions');
type Distinction = typeof distinctions[number];

type Props = Distinction['data'] & {
  render?: () => Promise<{ Content: any }>;
  lang: string;
}

const { title, date, organization, logo, render, lang = 'en' } = Astro.props;

const formattedDate = DateTime.fromFormat(date, 'yyyy-MM').setLocale(lang).toFormat('MMM yyyy');
const { Content } = await render?.() || { Content: () => null };

const t = translations[lang];
---

<div class="w-full space-y-2">
  <div class="flex gap-3">
    <Squircle width={40} height={40} className="shrink-0 bg-primary-100 w-[40px] h-[40px] relative">
      <div class="real-logo absolute inset-0">
        {logo ? (
          <Image 
            src={logo} 
            alt={title} 
            width={40} 
            height={40}
            class="w-10 h-10"
            loading="lazy"
            quality="low"
          />
        ) : null}
      </div>
      <div class="placeholder-icon absolute inset-0">
        <div class="w-[40px] h-[40px] flex items-center justify-center text-primary-300">
          <Trophy className="w-6 h-6" />
        </div>
      </div>
    </Squircle>

    <div class="flex-grow">
      <div class="flex items-center justify-between">
        <div class="font-semibold text-primary-900">
          {title}
        </div>
        <div class="text-sm text-gray-600 whitespace-nowrap">
          {formattedDate}
        </div>
      </div>
      <div class="text-sm text-primary-700">{t.sections.distinctions.associatedWith} <span class="text-primary-500">{organization}</span></div>
    </div>
  </div>

  <div class="text-primary-900 font-light text-sm">
    <div class="[&>ul]:list-disc [&>ul]:ml-4 [&>ul>li]:mb-2 [&>ul>li::marker]:text-secondary-600">
      <Content />
    </div>
  </div>
</div>

<style>
  /* Default states */
  .real-logo {
    display: block;
  }
  
  .placeholder-icon {
    display: none;
  }

  /* When ANY parent has toggle-logos class, hide real logo and show placeholder */
  :global(.toggle-logos) .real-logo {
    display: none !important;
  }
  
  :global(.toggle-logos) .placeholder-icon {
    display: block !important;
  }
</style>